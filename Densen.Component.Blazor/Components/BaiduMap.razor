@implements IAsyncDisposable
@inject IJSRuntime JS
@namespace AmeBlazor.Components

<div class="info">
    <button id="change-btn" onclick="setNewCenter()">随机地图中心点</button>
    <button id="change-btn" onclick="getMapCenter()">获取当前中心点</button>
</div>
<div id="container"></div>
<ul class="btn-wrap" style="z-index: 99;">
 @*   <li class="btn" onclick="@OnBtnClick("showOverlay")">显示覆盖物</li>*@
    <li class="btn" onclick="show3Dbuild()">显示3D建筑物</li>
    <li class="btn" onclick="showTilelay()">显示图层</li>
    <li class="btn" onclick="hideOverlay()">隐藏覆盖物</li>
    <li class="btn" onclick="hide3Dbuild()">隐藏3D建筑物</li>
    <li class="btn" onclick="hideTilelay()">隐藏图层</li>
    <li class="btn" onclick="showText()">显示POI文字</li>
    <li class="btn" onclick="hideText()">隐藏POI文字</li>
    <li class="btn" onclick="showIcon()">显示POI的Icon</li>
    <li class="btn" onclick="hideIcon()">隐藏POI的Icon</li>
    <li class="btn" onclick="showRoadNet()">显示路网</li>
    <li class="btn" onclick="hideRoadNet()">隐藏路网</li>
    <li class="btn" onclick="showEARTH_MAP()">地球</li>
    <li class="btn" onclick="hideEARTH_MAP()">普通</li>
</ul>
<link href="/_content/Densen.Component.Blazor/lib/baidumap/baidumap.css" rel="stylesheet" />

@code{ 

    /// <summary>
    /// 获得/设置 错误回调方法
    /// </summary>
    [Parameter]
    public Func<string, Task>? OnError { get; set; }

    private IJSObjectReference? module;
     

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import", "./_content/Densen.Component.Blazor/lib/baidumap/baidumap.js");
            await module.InvokeVoidAsync("init");
        }
    }

    public async Task OnOptionsChanged(ViewerOptions options) => await module!.InvokeVoidAsync("init", options);

    public async Task OnBtnClick(string btn) => await module!.InvokeVoidAsync(btn);

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
        {
            //await module.InvokeVoidAsync("destroy", Options);
            await module.DisposeAsync();
        }
    }
}

