@page "/MindMaps"
@attribute [TabItemOption(Text = "思维导图")]
@inherits AppComponentBase
@using static BootstrapBlazor.Components.MindMapNode
@using System.ComponentModel

<a href="https://www.nuget.org/packages/BootstrapBlazor.MindMap#readme-body-tab"><h3>思维导图 MindMap</h3></a>
<hr />
<a href="https://github.com/densen2014/Densen.Extensions/blob/master/Demo/DemoShared/Pages/MindMaps.razor"><h5>页面源码</h5></a>

<p>Tab:添加新节点</p>
<p>鼠标可拖动节点排列</p>

<MindMap @ref="MindMap" Options="Options" Data="@Data" OnReceive="@OnReceive" OnError="@OnError" StyleCss="height: 55vh;" />

<div class="row mt-3">
    <div class="col-12 mt-3">
        <Button Text="例子1" OnClick="Sample" />
        <Button Text="一周安排" OnClick="Sample2" />
        <Button Text="下载为PNG" OnClick="Export" />
        <Button Text="下载为json" OnClick="ExportJson" />
        @*<Button Text="导出PNG" OnClick="ExportPng" />*@
        <Button Text="导出对象" OnClick="GetFullData" />
        <Button Text="导出json对象" OnClick="GetData" />
        <Button Text="导入数据(json)" OnClick="SetData" />
        <Button Text="复位" OnClick="Reset" />
    </div>
    <div class="col-12 col-sm-3 mt-3">
        <Select @bind-Value="Options.Layout" ShowLabel="true" />
    </div>
    <div class="col-12 col-sm-3 mt-3">
        <Select @bind-Value="Options.Theme" ShowLabel="true" />
    </div>
    <div class="col-12 mt-3">
        <Textarea @bind-Value="Message" rows="10" />
        <a href="https://github.com/wanglin2/mind-map/blob/main/simple-mind-map/example/exampleData.js?WT.mc_id=DT-MVP-5005078"><h6>数据示例</h6></a>
    </div>
</div>


<AttributeTable Items="@GetAttributes()" />

<AttributeTable Title="NodeData" Items="@GetAttributes()" />

@code{

    [NotNull]
    MindMap? MindMap { get; set; }

    new string? Message { get; set; } = "";

    private MindMapOption Options { get; set; } = new();

    [NotNull]
    [DisplayName("布局")]
    private EnumMindMapLayout Layout { get; set; } = EnumMindMapLayout.mindMap;

    [NotNull]
    [DisplayName("主题")]
    private EnumMindMapTheme Theme { get; set; } = EnumMindMapTheme.defaultTheme;

    /// <summary>
    /// 初始化数据
    /// </summary>
    public MindMapNode Data { get; set; } = new MindMapNode
    {
        Data = new NodeData
        {
            Text = "根节点",
            Generalization = new Generalization
            {
                Text = "概要的内容"
            },

        },
        Children = new List<MindMapNode>()
{
            new MindMapNode
            {
                Data = new NodeData
                {
                    Text = "二级节点1",
                },
                    Children = new List<MindMapNode>()
{
                        new MindMapNode
                        {
                            Data = new NodeData
                            {
                                Text = "分支主题1",
                            },
                        },
                        new MindMapNode
                        {
                            Data = new NodeData
                            {
                                Text = "分支主题2",
                            },
                        },
                        new MindMapNode
                        {
                            Data = new NodeData
                            {
                                Text = "分支主题3",
                            },
                        }
                    }
            },
            new MindMapNode
            {
                Data = new NodeData
                {
                    Text = "二级节点2",
                },
            },
            new MindMapNode
            {
                Data = new NodeData
                {
                    Text = "二级节点3",
                },
            }
        }
    };

    private Task OnReceive(string? message)
    {
        Message = message;
        return Task.CompletedTask;
    }

    private Task OnError(string message)
    {
        Message = message;
        return Task.CompletedTask;
    }

    private async Task Export()
    {
        await MindMap.Export();
        await ShowBottomMessage("下载Png");
    }

    private async Task ExportJson()
    {
        await MindMap.Export("json", WithConfig: false);
        await ShowBottomMessage("下载Json");
    }

    private async Task ExportPng()
    {
        await MindMap.Export(IsDownload: false, WithConfig: false);
        await ShowBottomMessage("已导出Png");
    }

    private async Task GetFullData()
    {
        await MindMap.GetData();
    }

    private async Task GetData()
    {
        await MindMap.GetData(false);
    }

    private async Task SetData()
    {
        if (Message != null) await MindMap.SetData(Message);
    }

    private async Task Reset()
    {
        await MindMap.Reset();
    }

    private async Task Sample()
    {
        Message = SampleData;
        await SetData();
    }

    private async Task Sample2()
    {
        Message = SampleData2;
        await SetData();
    }

    private async Task OnSelectedLayoutChanged(IEnumerable<SelectedItem> values, EnumMindMapLayout val)
    {
        await MindMap.SetLayout(val);
    }

    private async Task OnSelectedThemeChanged(IEnumerable<SelectedItem> values, EnumMindMapTheme val)
    {
        await MindMap.SetTheme(val);
    }


}
